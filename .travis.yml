language: java
install: true

before_install:
  - echo $JAVA_HOME
  # make Gradle wrapper executable
  - chmod +x gradlew


# NOTE: branch 'develop' is not tested. When a deployable version is ready
# the commits must be merged into branch 'release' and a build will be
# triggered automatically. When the build passes, merge the new code into 'master'.
branches:
  only:
    - master
    - feature/java-up   # temporarily add this branch for testing, replace with release when it works
    #    - release

env:
  global:
    - CC_TEST_REPORTER_ID=1a40cf4d7c373bae338a42587014cd23bd8a17ce866f03d127b1e065c4ccfacb
    - automated_test=allow

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/


stages:
  - test-jdk

jdk:
  - openjdk8
  - openjdk11

jobs:
  include:
    - stage: test-jdk
      # Prepare test reporter for CodeClimate
      before_script:
        - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        - chmod +x ./cc-test-reporter
        - ./cc-test-reporter before-build
      # run tests with Cobertura using JDK 11 (last in 'jdk' array)
      script: gradle cobertura -i
      # format & upload coverage report
      after_script:
        - ./cc-test-reporter format-coverage -t cobertura build/reports/cobertura/coverage.xml
        - ./cc-test-reporter upload-coverage

    - jdk: openjdk8
      # run tests with Cobertura using JDK 8 (test retro compatibility with older versions of the SDK)
      script: gradle cobertura -i
